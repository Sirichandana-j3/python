class Solution:
    def threeSum(self, nums):
        nums.sort()  # Step 1: Sort the array
        result = []  # To store unique triplets
        
        for i in range(len(nums) - 2):
            # Step 2: Skip duplicates for the fixed number
            if i > 0 and nums[i] == nums[i - 1]:
                continue

            left, right = i + 1, len(nums) - 1  # Step 3: Two pointers
            
            while left < right:
                total = nums[i] + nums[left] + nums[right]
                
                if total == 0:
                    result.append([nums[i], nums[left], nums[right]])
                    
                    # Skip duplicates on the left
                    while left < right and nums[left] == nums[left + 1]:
                        left += 1
                    # Skip duplicates on the right
                    while left < right and nums[right] == nums[right - 1]:
                        right -= 1
                    
                    left += 1
                    right -= 1
                
                elif total < 0:
                    left += 1  # Need a larger number
                else:
                    right -= 1  # Need a smaller number
        
        return result





        
